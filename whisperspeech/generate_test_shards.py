# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/Untitled1.ipynb.

# %% auto 0
__all__ = []

# %% ../nbs/Untitled1.ipynb 1
from fastcore.script import call_parse

import webdataset as wds
import numpy as np
import sys, json

# %% ../nbs/Untitled1.ipynb 2
@call_parse
def process_shard(
    shard:str,         # shard "path"
):
    kind, name = shard.split('/')[-2:]
    
    def output_samples(samples):
        with wds.TarWriter(sys.stdout.buffer, compress=name.endswith('.gz')) as sink:
            for x in samples: sink.write(x)
    
    z = np.zeros
    
    if kind == '':
        if name == 'dataset.json':
            json.dump({
                'txt-samples': 4,
                'atoks-samples': 4,
                'txt_dir': 'small.en-txt',
                'shards': ["shard1.tar", "shard2.tar"],
                'language': 'en',
            }, sys.stdout)
            return
    if kind == 'small.en-txt':
        return output_samples([{
            '__key__': f'sample{i}', '__url__': name,
            'txt': "transcript",
        } for i in range(2)])
    if kind == 'stoks-raw-vq-medium-en+pl':
        return output_samples([{
            '__key__': f'sample{i}', '__url__': name,
            'stoks.npy': z(400),
            'spk_emb.npy': z(192),
        } for i in range(2)])
    if kind == 'prosmimic-raw':
        if name == 'shard2.tar.gz': sys.exit(1) # no prosmimic for shard2
        return output_samples([{
            '__key__': f'sample{i}', '__url__': name,
            'prosmimic_block11.npy': z(768,),
            'prosmimic_block5.npy': z(768,),
            'prosmimic_emotions.npy': z(48,)
        } for i in range(2)])
